|******************************************************************************
|* tfisgdll0112  0  VRC B61U a7 isg 
|* DLL for Refresh Total Actual/Budgeted Inflow/Outfliow
|* 10344
|* 19-12-13 [10:28]
|******************************************************************************
|* Script Type: Library
|******************************************************************************
     
table	ttfisg012
table	ttcemm030
table	ttfisg014
table	ttfisg015
table	ttpisg087
table	ttpisg089

extern	domain	tcamnt	monthly.inflow, opening.inflow, monthly.outflow, opening.outflow, aios.inflow, aios.outflow, bios.inflow, bios.outflow
	
function extern tfisgdll0112.refresh.actual.inflow.outflow(
						domain	tfgld.year	year,
						domain	tpisg.month	mnth,
						domain	tcemm.grid	eunt)
{
	select	tfisg012.hcod,
		tfisg012.eunt,
		tfisg012.aios
	from	tfisg012 for update
	where	tfisg012._index1 = {:year, :mnth, :eunt}
	selectdo
		monthly.inflow = 0
		monthly.outflow = 0
		opening.inflow = 0
		opening.outflow = 0
		aios.inflow = 0
		aios.outflow = 0
		
		if tfisg012.hcod = "H0000001" then
			tfisgdll0112.cal.actual(tfisg012.eunt)
			tfisg012.aios = aios.inflow
		else
			if tfisg012.hcod = "H0000003" then
				tfisgdll0112.cal.actual(tfisg012.eunt)
				tfisg012.aios = aios.outflow
			else
				tfisg012.aios = 0
			endif
		endif
		db.update(ttfisg012, db.retry)
		commit.transaction()
	endselect
}


function extern tfisgdll0112.refresh.budgeted.inflow.outflow(
						domain	tfgld.year	year,
						domain	tpisg.month	mnth,
						domain	tcemm.grid	eunt)
{
	select	tfisg012.hcod,
		tfisg012.eunt,
		tfisg012.bios
	from	tfisg012 for update
	where	tfisg012._index1 = {:year, :mnth, :eunt}
	selectdo
		bios.inflow = 0
		bios.outflow = 0
		if tfisg012.hcod = "H0000001" then
			tfisgdll0112.cal.budget(tfisg012.eunt)
			tfisg012.bios = bios.inflow
		else
			if tfisg012.hcod = "H0000003" then
				tfisgdll0112.cal.budget(tfisg012.eunt)
				tfisg012.bios = bios.outflow
			else
				tfisg012.bios = 0
			endif
		endif
		db.update(ttfisg012, db.retry)
		commit.transaction()
	endselect
}	
	
function extern	tfisgdll0112.cal.actual(domain	tcemm.grid	eunt)
{
	select	tcemm030.fcmp
	from	tcemm030
	where	tcemm030._index1 = {:eunt}
	as set with 1 rows
	selectdo
		select	tfisg014.iamt,
			tfisg014.oamt,
			tppdm600.cprj
		from	tfisg014, tppdm600
		where	tppdm600._index7 = {:tcemm030.fcmp}
		and	tfisg014.cprj refers to tppdm600
		selectdo
			monthly.inflow = monthly.inflow + tfisg014.iamt
			monthly.outflow = monthly.outflow + tfisg014.oamt
		endselect
		
		select	tfisg015.iamt,
			tfisg015.oamt,
			tppdm600.cprj
		from	tfisg015, tppdm600
		where	tppdm600._index7 = {:tcemm030.fcmp}
		and	tfisg015.cprj refers to tppdm600
		selectdo
			opening.inflow = opening.inflow + tfisg015.iamt
			opening.outflow = opening.outflow + tfisg015.oamt
		endselect
	endselect
	aios.inflow = monthly.inflow + opening.inflow
	aios.outflow = monthly.outflow + opening.outflow
}
	
function extern	tfisgdll0112.cal.budget(domain	tcemm.grid	eunt)
{
	select	tpisg087.ccod
	from	tpisg087
	where	tpisg087.lddn = {:eunt}
	selectdo
		select	tpisg089.amti,
			tpisg089.amto
		from	tpisg089
		where	tpisg089._index1 = {:tpisg087.ccod}
		selectdo
			bios.inflow = bios.inflow + tpisg089.amti
			bios.outflow = bios.outflow + tpisg089.amto
		endselect
	endselect
}


