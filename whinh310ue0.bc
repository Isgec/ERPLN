|******************************************************************************
|* whinh310ue  0  VRC B61U a7 live
|* Receipt - For Updating the Sanction
|* tools1
|* 14-08-02 [12:38]
|******************************************************************************
|* Script Type: Library
|* ID: ISGEC016015,Manav singh,21-01-2019,VRC B61U a7 live
|* Modification as per cdf field Delivery term input process block on confirmed status 

|******************************************************************************
                                                                                
#include <bic_dal>

	table	twhinh310
	table	ttfacp100
		domain	tcmcs.str30	old.value,new.value
		domain	tccdec		hold.cdec


function extern long ue.before.before.save.object(long mode)
{
	get.var(pid,"whinh310.cdf_cdec",hold.cdec)				|#Sahil.Sharma.21.02.2019.sn
	
	select	tcmcs041.cdec
	from	tcmcs041
	where	tcmcs041._index1 = {:hold.cdec}
	selectdo
	selectempty
		dal.set.error.message("@Invalid Delivery Term")
		return(DALHOOKERROR)
	endselect
										|#Sahil.Sharma.21.02.2019.en


	on case mode
	case DAL_NEW:
					|#ISGECGST001.sn
		if not tcisgdll0100.check.IR.is.project.purchase(lval(whinh310.dino)) then
			dal.set.error.message("@Only IR Related To Project Purchase Could be Linked...")
			return(DALHOOKERROR)
		endif
					|#ISGECGST001.en
		break
	case DAL_UPDATE:
					|#ISGECGST001.sn
		if not tcisgdll0100.check.IR.is.project.purchase(lval(whinh310.dino)) then
			dal.set.error.message("@Only IR Related To Project Purchase Could be Linked...")
			return(DALHOOKERROR)
		endif
					|#ISGECGST001.en
		break
	endcase
	return(0)
}

function extern long ue.after.before.save.object(long mode)
{
	on case mode
	case DAL_NEW:
		break
	case DAL_UPDATE:
		break
	endcase
	return(0)
}

function extern long ue.before.after.save.object(long mode)
{
	on case mode
	case DAL_NEW:
		break
	case DAL_UPDATE:
		break
	endcase
	return(0)
}

function extern long ue.after.after.save.object(long mode)
{
	on case mode
	case DAL_NEW:
		break
	case DAL_UPDATE:
		if whinh310.stat = whinh.rhst.confirmed then
			get.project.element.against.receipt.line(whinh310.rcno)
		endif
		
		if whinh310.stat = whinh.rhst.confirmed then      |#ISGEC016015.sn
			get.var(pid,"whinh310.cdf_cdec",new.value)
			with.old.object.values.do(get.old.value)
				 if trim$(old.value) <> trim$(new.value)  then
					dal.set.error.message("Cannot change Delivery terms after receipt confirmation ")
					return(DALHOOKERROR)
				 endif
		endif						   |#ISGEC016015.en
		break
	endcase
	return(0)
}

function extern long ue.before.before.destroy.object()
{
	return(0)
}

function extern long ue.after.before.destroy.object()
{
	return(0)
}

function extern long ue.before.after.destroy.object()
{
	return(0)
}

function extern long ue.after.after.destroy.object()
{
	return(0)
}


function get.project.element.against.receipt.line
				(
					domain	whinh.shpm	i.rcno
				)
{
	domain	tcorno		o.vers
	domain	tcorno		o.orno
	domain	tcpono		o.pono
	domain	tccprj		o.cprj
	domain	tppdm.cspa	o.cspa
	
	select 	whinh312.orno:o.orno,
		whinh312.pono:o.pono
	from	whinh312
	where	whinh312._index1 = {:i.rcno}
	and	whinh312.oorg = whinh.oorg.purchase
	group by whinh312.rcno,whinh312.orno,whinh312.pono
	selectdo
		select 	tdpur401.cprj:o.cprj,
			tdpur401.cspa:o.cspa
		from	tdpur401
		where	tdpur401._index1 = {:o.orno,:o.pono}
		as set with 1 rows
		selectdo
			if tpisgdll0012.check_sanction_status(o.cprj,o.vers) then
			endif

			tpisgdll0012.SanctionControlLine(o.cprj,o.vers,o.cspa)
		endselect
	endselect
	
}

function get.old.value()						|#ISGEC016015.sn
{
	get.var(pid,"whinh310.cdf_cdec",old.value)
}								|#ISGEC016015.en

